// @fontSize: 40px;
// @border: 2px solid #ccc;
// @property: background;
// @color: color;
// @nav: navigation;
// @img: "../img/";

// @var: "Это текст";
// @var1: "var"; // Переменная через переменную
// @bgc: blue;

// a {
//     font-size: @fontSize;
//     border: @border;
// }

// body {
//     background: red;
// }

// p {
//     font-size: @fontSize*0.8;
// }

// .@{nav} {
//     height: 50px;
// }

// // Конструктор ид через переменную
// #@{nav} {
//     width: 100px;
// }

// // Конструктор класса через переменную
// .header-@{nav} {
//     background: red;
// }

// // Конструктор сложного класса
// body {
//     background-image: url("@{img}les.jpg");
//     background-repeat: no-repeat;
//     background-size: cover;

//     // @{property}-@{color}:red;
//     h1 {
//         background-color: @bgc;
//     }
// }

// div::before {
//     content: @@var1;
// }
// @font1: 18px;
// @font2: 14px;

// body {
//     font-size: @font1;

//     ul {
//         font-size: @font2;
//     }
// }

// @color1: red;
// @color2: green;
// @color3: yellow;

// .color {
//     color: @color1;

//     .text {
//         color: @color2;

//         a {
//             background: @color3;
//         }
//     }

//     .error{
//         background: @color1;
//     }
// }
// & Родительский селектор

//Двойной родитель
// .nav{
//     a {
//         text-decoration: none;
//         color: #000;

//         &:hover {
//             color: red;
//         }

//         &>span {
//             color: green;
//         }

//         &:before {
//             content: "Link here!";
//         }

//         &::after {
//             content: "Out of link";
//         }
//     }
// }

// Расширение класса
// .input {
//     color: #000;

//     &-error {
//         color: #f00;
//     }

//     &-success {
//         color: #0f0;
//     }
// }

// Двойное использование
// .btn {
//     color: #fff;

//     &+& {
//         color: #0f0;
//     }

//     &>& {
//         color: #00f;
//     }

//     && {
//         color: #f00;
//     }

//     &,
//     &-green {
//         color: #ff0;
//     }
// }

// Обратное использование
// .nav {
//     .menu {
//         color: #f00;
//         background: #ff0;

//         .home & {
//             color: #0f0;
//             background: #0ff;
//         }
//     }


// }

// Обработка родительского селектора через ,
// .nav,
// .navigation {
//     &:before {
//         content: "Hi!";
//     }
// }

//Наследование стилей
.link-btn {
    &:extend(.btn);
}

// Альтернативный вызов наследования стилей

.link-btn:hover:extend(.btn-error):extend(.btn) {}

.link-btn:extend(.btn, .btn-error) {}

// =.link-btn:extend(.btn all) Также важен порядок стилей

// .btn {

//     div & {
//         color: #000000;
//         font-size: 16px;
//         font-weight: 700;
//     }
// }

// .btn-error {
//     color: red;
// }

// // Наследование стиля многими класами
// .link-btn,
// .link-btn-success,
// .link-btn-danger,
// #test {
//     &:extend(.btn all);
// }

// !!Важен порядок наследование в конце после родителя

// Примиси - Миксины

// .nav {
//     font-style: italic;
//     font-weight: bold;
//     color: red;
//     font-size: 18px;
// }

// #navigation {
//     background: blue;

// }

// ul {
//     #navigation;
//     .nav();
//     border: 2px solid red;
// }

// .nav {
//     .btn {
//         font-size: 20px;
//         font-family: Arial, Helvetica, sans-serif;
//         font-weight: bold;
//         color: #000;
//         background: #0ff;

//         &:hover {
//             background: yellow;
//             font-size: 24px;
//         }
//     }
// }


// .link-btn {
//     .nav .btn !important; // Примениться в 1 очередь игнорирую порядок и следование
// } Вложенная примесь

// Примеси с параметрами

// .transition(@prop: all, @time: 0.2s, @effect: linear) {
//     // Через : указано значение по умолчанию

//     transition: @prop @time @effect;
// }

// .cls1 {
//     .transition(width, 0.5s, linear);
// }

// .cls2 {
//     .transition(background, 2.5s, linear);
// }

// .cls3 {
//     .transition(@effect: easy);
// }

// // Перегрузка примесей
// .mixin(@color: #ccc) {
//     color: @color;
// }

// .mixin(@color: red, @font-size: 18px) {
//     color: @color;
//     font-size: @font-size;
// }

// .cls {
//     .mixin(green, 10px); // Переопределяем значение параметров примеси
// }

// Иморт сторонних файлов в 1 очредь стилей (другие файлы будут обрабатываться как less файлы)
// @import "costom";
// @import "costom.less"; // Одно и тоже 
// @import "costom.php";

// // Ключевы слова
// //@import  keywords"costom.less";
// @import(reference) "costom.less"; // Подключен но не используется можно использовать только примеси!
// @import(less) "costom.less"; // обрабатывается как Less
// @import(css) "costom.less"; //обрабатывается как css
// @import(once) "costom.less";// Подключтиться только 1 раз
// @import(multiple) "costom.less";// Подкличиться много раз

@color: #f3c;

p {
    background: @color;
}

p:hover {
    //background: lighten(@color, 10);
    //background: darken(@color, 25);
    background: spin(@color, 25); // Отклонение по тону(по кругу цветов)
}

@string: "В этот день %S  произошел переворот в мире ИТ! А имменно %a";
@date: "(28.04.1993)";
@message: 'Programming HTML!';

p::before {
    //content: %(@string, @date, @message); Подстановка данных переменных вместо условных знаков
    content: replace("Web is a beautiful think", "Web", "JS");
}
p{
    font-size: ceil(18.5); // 18px
}